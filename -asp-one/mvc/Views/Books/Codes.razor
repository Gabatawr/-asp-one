@using mvc.Data

@inject NavigationManager navger
@inject ApplicationDbContext context

<h3>Codes</h3>

@code
{
    [Parameter]
    public Book book { get; set; }

    private void RemoveCode(string code)
    {
        book.Codes.Remove(code);
        context.Entry(book.Codes).State = Microsoft.EntityFrameworkCore.EntityState.Modified;
    }

    private string newCode = string.Empty;
    private void AddCode(string code)
    {
        book.Codes.Add(code);
        context.Entry(book.Codes).State = Microsoft.EntityFrameworkCore.EntityState.Modified;

        newCode = string.Empty;
    }
}

@if (book?.Codes != null)
{
    <ul>
        @foreach (var code in book.Codes)
        {
            <li>
                <div>@(code)</div>
                <button type="button" class="btn badge-danger" @onclick="@(() => RemoveCode(code))">Remove</button>
            </li>
        }
    </ul>
    <input type="hidden" id="Codes" name="Codes" value="@System.Text.Json.JsonSerializer.Serialize(book.Codes, null)" />
}

<input type="text" placeholder="new code" @bind="@newCode" />
<button type="button" class="btn badge-primary" @onclick="@(() => AddCode(newCode))">Add</button>
